// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "mysql"
  url      = "mysql://root:@M972004abc@localhost:3306/customer_loyalty_db"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Customer {
  id        Int          @id @default(autoincrement())
  email     String
  name      String
  firstName      String
  lastName       String
  customerIdShopify String   @unique
  points         Point?
  pointLogs      PointLog[]
  redeemCodes    RedeemCode[]
}

model Point {
  id           Int       @id @default(autoincrement())
  customerId   Int       @unique
  totalPoints  Int       @default(0)

  customer     Customer  @relation(fields: [customerId], references: [id])
}

model PointLog {
  id          Int       @id @default(autoincrement())
  customerId  Int
  change      Int       // +earn hoặc -spend
  reason      String?
  createdAt   DateTime  @default(now())

  customer    Customer  @relation(fields: [customerId], references: [id])
}

model RedeemCode {
  id          Int       @id @default(autoincrement())
  code        String    @unique
  amount      Int       // Giá trị giảm giá (VNĐ)
  customerId  Int
  pointUsed   Int
  createdAt   DateTime  @default(now())

  customer    Customer  @relation(fields: [customerId], references: [id])
}


model PointConfig {
  id                 Int      @id @default(autoincrement())
  earnRate           Int    
  redeemRatePoint    Int  
  redeemRateAmount   Int   
  updatedAt          DateTime @updatedAt
  createdAt          DateTime @default(now())
}

